<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.art1001.supply.mapper.user.UserMapper">
	<!--mybatis ehcache缓存配置,以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 -->
	<!--<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/> -->
	<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->

	<sql id="userAttributes">
		user_id,
		user_name,
		sex,
	    birthday,
		telephone,
		email,
		image,
	    address,
		job,
		default_image,
		account_name,
		description
	</sql>

	<sql id="join">
		user_id,
		user_name,
		sex,
	    birthday,
		telephone,
		email,
		image,
	    address,
		job,
		default_image,
		account_name
	</sql>

	<sql id="users">
		u.user_id,
		u.user_name,
		u.sex,
	    u.birthday,
		u.telephone,
		u.email,
		u.image,
	    u.address,
		u.job,
		u.default_image,
		u.account_name,
		u.delete_status,
		u.locked,
		u.description,
		u.creator_name,
		u.create_time,
		u.update_time
	</sql>

	<resultMap id="userMap" type="com.art1001.supply.entity.user.UserEntity">
		<id property="userId" column="user_id"/>
		<result property="userName" column="user_name" />
		<result property="accountName" column="account_name"/>
		<result property="deleteStatus" column="delete_status"/>
		<result property="locked" column="locked"/>
		<result property="description" column="description"/>
		<result property="credentialsSalt" column="credentials_salt"/>
		<result property="creatorName" column="creator_name"/>
		<result property="createTime" column="create_time"/>
		<result property="updateTime" column="update_time"/>
		<result property="sex" column="sex"/>
		<result property="birthday" column="birthday"/>
		<result property="telephone" column="telephone"/>
		<result property="email" column="email"/>
		<result property="image" column="image"/>
		<result property="address" column="address"/>
		<result property="job" column="job"/>
		<result property="defaultImage" column="default_image"/>
	</resultMap>

	<select id="findCount" resultType="java.lang.Integer">
		select count(0) from tb_user
	</select>
	
	<select id="findByName" parameterType="java.lang.String" resultMap="userMap">
		SELECT <include refid="userAttributes"/>
		from tb_user
		where account_name = #{name}
	</select>
	
	<select id="findById" parameterType="java.lang.String" resultMap="userMap">
		SELECT
		<include refid="userAttributes"/>
		FROM tb_user
		where user_id = #{memberId}
	</select>

	<!-- 查询指定id的人员信息 -->
	<select id="findManyUserById" resultMap="userMap">
		SELECT
		<include refid="join"/>
		FROM
			tb_user u
		<where>
			<if test="memberIds != null and memberIds != ''">
				and u.user_id in (
				<foreach collection="memberIds.split(',')" item="id" index="index" separator=",">
					#{id}
				</foreach>
				)
				ORDER BY FIELD(u.user_id,
				<foreach collection="memberIds.split(',')" item="id" index="index" separator=",">
					#{id}
				</foreach>)
			</if>
			<if test="memberIds == null or memberIds == ''">
				and u.user_id in ('')
			</if>
		</where>
	</select>

	<!-- 查询指定项目下所有的成员信息 -->
	<select id="findProjectAllMember" resultMap="userMap">
		select
		<include refid="join"/>
		from tb_user u where u.user_id in (select member_id from prm_project_member where project_id = #{projectId} order by member_label desc)
	</select>

	<!-- 根据用户id查用户信息 -->
	<select id="findUserInfoById" resultMap="userMap">
		SELECT
		<include refid="userAttributes"/>
		FROM
			tb_user
		WHERE
			user_id = #{id}
	</select>

	<!-- 根据用户id查询出用户信息 -->
	<select id="findUserById" resultMap="userMap">
		select
		<include refid="userAttributes"/>
		from tb_user where user_id = #{uId}
	</select>

	<!-- 根据用户的id反向选择用户 -->
	<select id="reverseFindUser" resultMap="userMap">
		select
		<include refid="userAttributes"/>
		from tb_user where user_id in (
		select member_id from prm_project_member where project_id = #{projectId} and member_id not in
		<foreach collection="uId" separator="," open="(" close=")" item="mId">
			#{mId}
		</foreach>
		)
	</select>


	<select id="findByKey" parameterType="java.lang.String" resultMap="userMap">
		SELECT <include refid="userAttributes"/>
		FROM tb_user
		where account_name like CONCAT('%',#{keyword},'%') or user_name LIKE CONCAT( '%',#{keyword}, '%' )
	</select>

	<!-- 查询出某个项目中的所有成员信息 -->
    <select id="selectProjectMembers" resultType="com.art1001.supply.entity.user.UserEntity">
		select <include refid="users"/>
		from tb_user AS u left join prm_project_member AS m on u.user_id = m.member_id where m.project_id = #{projectId}
	</select>

    <select id="getAllUserId" resultType="java.lang.String">
		select user_id from tb_user_copy1
	</select>


	<select id="getPhoneList" resultType="java.lang.String">
		select account_name from tb_user_copy1
	</select>
    <select id="findInfo" resultType="com.art1001.supply.entity.user.UserInfo">
		select user_id , user_name, account_name,image from tb_user where account_name=#{accountName}
	</select>
</mapper>