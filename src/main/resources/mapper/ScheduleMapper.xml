<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.art1001.supply.mapper.schedule.ScheduleMapper">
	
	<resultMap id="BaseResultMap" type="com.art1001.supply.entity.schedule.Schedule">
		<result column="schedule_id" property="scheduleId" jdbcType="VARCHAR" />
		<result column="schedule_name" property="scheduleName" jdbcType="VARCHAR" />
		<result column="project_id" property="projectId" jdbcType="VARCHAR" />
		<result column="start_time" property="startTime" jdbcType="BIGINT" />
		<result column="end_time" property="endTime" jdbcType="BIGINT" />
		<result column="repeat" property="repeat" jdbcType="VARCHAR" />
		<result column="remind" property="remind" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="tag_id" property="tagId" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="BIGINT" />
		<result column="update_time" property="updateTime" jdbcType="BIGINT" />
		<result column="member_id" property="memberId" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="resultMap" type="com.art1001.supply.entity.schedule.ScheduleVo">
		<id property="date" column="date" />
		<collection property="scheduleList" column="date" ofType="com.art1001.supply.entity.schedule.Schedule" javaType="ArrayList"
		select="com.art1001.supply.mapper.schedule.ScheduleMapper.findScheduleList"/>
	</resultMap>


	<sql id="Base_Column_List">
				schedule_id,
				schedule_name,
				project_id,
				start_time,
				end_time,
				`repeat`,
				remind,
				address,
				remarks,
				tag_id,
				create_time,
				update_time,
				member_id
	</sql>

	<sql id="whereStatement">
		<where>
			1 = 1
			<if test="condition !=null">
			</if>
		</where>
	</sql>
	
	<select id="findSchedulePagerList" resultMap="BaseResultMap"
		parameterType="com.art1001.supply.entity.base.Pager">
		
		select * from prm_schedule
		<include refid="whereStatement" />
		
		<if test="orderBy == 0">
			order by schedule_id desc
		</if>
		<if test="orderBy == 1">
			order by schedule_id asc
		</if>
		
	</select>
	
	<select id="findScheduleAllList" resultMap="BaseResultMap"
		parameterType="com.art1001.supply.entity.schedule.Schedule">
		SELECT
		<include refid="Base_Column_List" />
		from prm_schedule
		<if test="orderBy == 0">
			order by schedule_id desc
		</if>
		<if test="orderBy == 1">
			order by schedule_id asc
		</if>
	</select>
	
	<select id="findScheduleById" resultMap="BaseResultMap" parameterType="java.lang.String">

		select
		<include refid="Base_Column_List" />
		from prm_schedule c where schedule_id = #{id}

	</select>
	
	<select id="findByIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from prm_schedule
		where schedule_id in
		<foreach collection="array" open="(" separator="," close=")" item="id" index="index">
			#{id}
		</foreach>
	</select>
	
	<delete id="deleteScheduleById" parameterType="java.lang.String">
		delete from
		prm_schedule where schedule_id = #{id}
	</delete>
	
	<insert id="saveSchedule" parameterType="com.art1001.supply.entity.schedule.Schedule">

		insert into prm_schedule
		<trim prefix="(" suffix=")" suffixOverrides=",">

			<if test="scheduleId != null and scheduleId != ''">
			schedule_id,
			</if>
			<if test="scheduleName != null and scheduleName != ''">
			schedule_name,
			</if>
			<if test="projectId != null and projectId != ''">
			project_id,
			</if>
			<if test="startTime != null ">
			start_time,
			</if>
			<if test="endTime != null ">
			end_time,
			</if>
			<if test="repeat != null and repeat != ''">
			`repeat`,
			</if>
			<if test="remind != null and remind != ''">
			remind,
			</if>
			<if test="address != null and address != ''">
			address,
			</if>
			<if test="remarks != null and remarks != ''">
			remarks,
			</if>
			<if test="tagId != null and tagId != ''">
			tag_id,
			</if>
			<if test="createTime != null ">
			create_time,
			</if>
			<if test="updateTime != null ">
			update_time,
			</if>
			<if test="memberId != null ">
				member_id,
			</if>
		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides=",">

			<if test="scheduleId != null and scheduleId != ''">
				#{scheduleId},
			</if>
			<if test="scheduleName != null and scheduleName != ''">
				#{scheduleName},
			</if>
			<if test="projectId != null and projectId != ''">
				#{projectId},
			</if>
			<if test="startTime != null ">
				#{startTime},
			</if>
			<if test="endTime != null ">
				#{endTime},
			</if>
			<if test="repeat != null and repeat != ''">
				#{repeat},
			</if>
			<if test="remind != null and remind != ''">
				#{remind},
			</if>
			<if test="address != null and address != ''">
				#{address},
			</if>
			<if test="remarks != null and remarks != ''">
				#{remarks},
			</if>
			<if test="tagId != null and tagId != ''">
				#{tagId},
			</if>
			<if test="createTime != null ">
				#{createTime},
			</if>
			<if test="updateTime != null ">
				#{updateTime},
			</if>
			<if test="memberId != null ">
				#{memberId},
			</if>
		</trim>

	</insert>
	
	<update id="updateSchedule" parameterType="com.art1001.supply.entity.schedule.Schedule">

		update prm_schedule
		<set>
			<if test="scheduleId != null and scheduleId != ''">
				schedule_id = #{scheduleId},
			</if>
			<if test="scheduleName != null and scheduleName != ''">
				schedule_name = #{scheduleName},
			</if>
			<if test="projectId != null and projectId != ''">
				project_id = #{projectId},
			</if>
			<if test="startTime != null ">
				start_time = #{startTime},
			</if>
			<if test="endTime != null ">
				end_time = #{endTime},
			</if>
			<if test="repeat != null and repeat != ''">
				`repeat` = #{repeat},
			</if>
			<if test="remind != null and remind != ''">
				remind = #{remind},
			</if>
			<if test="address != null and address != ''">
				address = #{address},
			</if>
			<if test="remarks != null and remarks != ''">
				remarks = #{remarks},
			</if>
			<if test="tagId != null and tagId != ''">
				tag_id = #{tagId},
			</if>
			<if test="createTime != null ">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null ">
				update_time = #{updateTime},
			</if>
			<if test="memberId != null ">
				member_id = #{memberId},
			</if>
		</set>

		WHERE schedule_id = #{id}

	</update>
	<select id="findScheduleGroupByCreateTime" resultMap="resultMap">
		SELECT FROM_UNIXTIME(create_time / 1000,'%Y-%m') as date from prm_schedule
		GROUP BY FROM_UNIXTIME(create_time / 1000,'%Y-%m');
	</select>
	<select id="findScheduleList" resultMap="BaseResultMap" parameterType="java.lang.String">

		SELECT * from prm_schedule where FROM_UNIXTIME(create_time / 1000,'%Y-%m') = #{date}

	</select>

	<!-- 查询出当前用户参与的近三天的日程 -->
	<select id="findScheduleByUserIdAndByTreeDay">
		SELECT
		<include refid="Base_Column_List"></include>
		FROM
		prm_schedule
		WHERE
		schedule_id IN (
		SELECT
		public_id
		FROM
		prm_task_member
		WHERE
		member_id = ''
		AND public_type = '日程'
		AND type = '参与者'
		)
		AND (
		SELECT
		FROM_UNIXTIME(
		start_time / 1000,
		'%Y-%m-%d'
		)
		) &gt;= (SELECT curdate())
		AND (
		SELECT
		FROM_UNIXTIME(
		start_time / 1000,
		'%Y-%m-%d'
		)
		) &lt;= (
		SELECT
		adddate(curdate(), '+2 days')
		)
	</select>
</mapper>