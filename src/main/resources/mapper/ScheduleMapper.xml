<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.art1001.supply.mapper.schedule.ScheduleMapper">
	
	<resultMap id="BaseResultMap" type="com.art1001.supply.entity.schedule.Schedule">
		<id column="schedule_id" property="scheduleId"/>
		<result column="schedule_name" property="scheduleName" jdbcType="VARCHAR" />
		<result column="project_id" property="projectId" jdbcType="VARCHAR" />
		<result column="start_time" property="startTime" jdbcType="BIGINT" />
		<result column="end_time" property="endTime" jdbcType="BIGINT" />
		<result column="repeat" property="repeat" jdbcType="VARCHAR" />
		<result column="remind" property="remind" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="tag_id" property="tagId" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="BIGINT" />
		<result column="update_time" property="updateTime" jdbcType="BIGINT" />
		<result column="member_id" property="memberId" jdbcType="VARCHAR" />
		<result column="member_ids" property="memberIds" jdbcType="CLOB" />
		<result column="privacy_pattern" property="privacyPattern" jdbcType="INTEGER" />
		<result column="schedule_calendar" property="scheduleCalendar" jdbcType="INTEGER" />
		<result column="is_del" property="isDel" jdbcType="INTEGER" />
		<!--关联项目-->
		<association property="project" column="project_id" javaType="com.art1001.supply.entity.project.Project"
					 select="com.art1001.supply.mapper.project.ProjectMapper.findProjectByProjectId"/>
		<!--创建者-->
		<association property="userEntity"  column="member_id" javaType="com.art1001.supply.entity.user.UserEntity"
					 select = "com.art1001.supply.mapper.user.UserMapper.findUserInfoById"/>
		<!--查询参与者-->
		<collection property="joinInfo" column="{memberIds=member_ids}" javaType="java.util.ArrayList"
					 select = "com.art1001.supply.mapper.user.UserMapper.findManyUserById"/>
		<!--查询标签-->
		<collection property="tagList" ofType="com.art1001.supply.entity.tag.Tag">
			<id property="tagId" column="tag_id"/>
			<result property="tagName" column="tag_name"/>
			<result property="bgColor" column="bg_color"/>
		</collection>


	</resultMap>

	<!-- 映射回收站数据 -->
	<resultMap id="BaseResultMap2" type="com.art1001.supply.entity.base.RecycleBinVO">
		<id column="schedule_id" property="id"/>
		<result column="schedule_name" property="name" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="BIGINT" />
	</resultMap>

	<!-- 用于关联、收藏的数据 -->
	<resultMap id="ScheduleApiBean" type="com.art1001.supply.entity.schedule.ScheduleApiBean">
		<id column="schedule_id" property="scheduleId"/>
		<result column="schedule_name" property="scheduleName" jdbcType="VARCHAR" />
		<result column="start_time" property="startTime" jdbcType="BIGINT" />
		<result column="end_time" property="endTime" jdbcType="BIGINT" />
		<result column="project_name" property="projectName" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="resultMap" type="com.art1001.supply.entity.schedule.ScheduleVo">
		<id property="date" column="date" />
		<result property="proejctId" column="project_id" />
		<collection property="scheduleList" column="{date=date,projectId=project_id}" ofType="com.art1001.supply.entity.schedule.Schedule" javaType="ArrayList"
		select="com.art1001.supply.mapper.schedule.ScheduleMapper.findScheduleList"/>
	</resultMap>

	<resultMap id="resultMap1" type="com.art1001.supply.entity.schedule.ScheduleVo">
		<id property="date" column="date" />
		<id property="userId" column="member_id" />
		<collection property="scheduleList" column="{date=date,userId=member_id}" ofType="com.art1001.supply.entity.schedule.Schedule" javaType="ArrayList"
					select="com.art1001.supply.mapper.schedule.ScheduleMapper.findScheduleListByDay"/>
	</resultMap>

	<sql id="Base_Column_List">
				schedule_id,
				schedule_name,
				project_id,
				start_time,
				end_time,
				`repeat`,
				remind,
				address,
				remarks,
				tag_id,
				create_time,
				update_time,
				member_id,
				member_ids,
				privacy_pattern,
				schedule_calendar,
				is_del
	</sql>

	<sql id="Base_Column_List2">
				s.schedule_id,
				s.schedule_name,
				s.project_id,
				s.start_time,
				s.end_time,
				s.`repeat`,
				s.remind,
				s.address,
				s.remarks,
				s.create_time,
				s.update_time,
				s.member_id,
				s.member_ids,
				s.privacy_pattern,
				s.is_del,
				s.schedule_calendar,
				tg.tag_id,
				tg.tag_name,
				tg.bg_color
	</sql>

	<sql id="whereStatement">
		<where>
			1 = 1
			<if test="condition !=null">
			</if>
		</where>
	</sql>
	
	<select id="findSchedulePagerList" resultMap="BaseResultMap"
		parameterType="com.art1001.supply.entity.base.Pager">

		select * from prm_schedule
		<include refid="whereStatement" />

		<if test="orderBy == 0">
			order by schedule_id desc
		</if>
		<if test="orderBy == 1">
			order by schedule_id asc
		</if>

	</select>

	<select id="findScheduleAllList" resultMap="BaseResultMap"
		parameterType="com.art1001.supply.entity.schedule.Schedule">
		SELECT
		<include refid="Base_Column_List" />
		from prm_schedule
		<if test="orderBy == 0">
			order by schedule_id desc
		</if>
		<if test="orderBy == 1">
			order by schedule_id asc
		</if>
	</select>

	<select id="findScheduleById" resultMap="BaseResultMap" parameterType="java.lang.String">

		select
		<include refid="Base_Column_List2" />
		from prm_schedule s left join prm_tag_relation tr on s.schedule_id = tr.schedule_id left join prm_tag tg on tr.tag_id = tg.tag_id
		where s.schedule_id = #{id}
	</select>

	<select id="findByIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from prm_schedule
		where schedule_id in
		<foreach collection="array" open="(" separator="," close=")" item="id" index="index">
			#{id}
		</foreach>
	</select>

	<delete id="deleteScheduleById" parameterType="java.lang.String">
		delete from
		prm_schedule where schedule_id = #{id}
	</delete>

	<insert id="saveSchedule" parameterType="com.art1001.supply.entity.schedule.Schedule">
		insert into prm_schedule
		<trim prefix="(" suffix=")" suffixOverrides=",">

			<if test="scheduleId != null and scheduleId != ''">
			schedule_id,
			</if>
			<if test="scheduleName != null and scheduleName != ''">
			schedule_name,
			</if>
			<if test="projectId != null and projectId != ''">
			project_id,
			</if>
			<if test="startTime != null ">
			start_time,
			</if>
			<if test="endTime != null ">
			end_time,
			</if>
			<if test="repeat != null and repeat != ''">
			`repeat`,
			</if>
			<if test="remind != null and remind != ''">
			remind,
			</if>
			<if test="address != null and address != ''">
			address,
			</if>
			<if test="remarks != null and remarks != ''">
			remarks,
			</if>
			<if test="tagId != null and tagId != ''">
			tag_id,
			</if>
			<if test="createTime != null ">
			create_time,
			</if>
			<if test="updateTime != null ">
			update_time,
			</if>
			<if test="memberId != null ">
				member_id,
			</if>
			<if test="memberIds != null and memberIds != ''">
				member_ids,
			</if>
			<if test="privacyPattern != null and privacyPattern != ''">
				privacy_pattern,
			</if>
			<if test="scheduleCalendar != null and scheduleCalendar != ''">
				schedule_calendar,
			</if>
		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides=",">

			<if test="scheduleId != null and scheduleId != ''">
				#{scheduleId},
			</if>
			<if test="scheduleName != null and scheduleName != ''">
				#{scheduleName},
			</if>
			<if test="projectId != null and projectId != ''">
				#{projectId},
			</if>
			<if test="startTime != null ">
				#{startTime},
			</if>
			<if test="endTime != null ">
				#{endTime},
			</if>
			<if test="repeat != null and repeat != ''">
				#{repeat},
			</if>
			<if test="remind != null and remind != ''">
				#{remind},
			</if>
			<if test="address != null and address != ''">
				#{address},
			</if>
			<if test="remarks != null and remarks != ''">
				#{remarks},
			</if>
			<if test="tagId != null and tagId != ''">
				#{tagId},
			</if>
			<if test="createTime != null ">
				#{createTime},
			</if>
			<if test="updateTime != null ">
				#{updateTime},
			</if>
			<if test="memberId != null ">
				#{memberId},
			</if>
			<if test="memberIds != null and memberIds != ''">
				#{memberIds},
			</if>
			<if test="privacyPattern != null and privacyPattern != ''">
				#{privacyPattern},
			</if>
			<if test="scheduleCalendar != null and scheduleCalendar != ''">
				#{scheduleCalendar},
			</if>
		</trim>

	</insert>

	<update id="updateSchedule" parameterType="com.art1001.supply.entity.schedule.Schedule">

		update prm_schedule
		<set>
			<if test="scheduleId != null and scheduleId != ''">
				schedule_id = #{scheduleId},
			</if>
			<if test="scheduleName != null and scheduleName != ''">
				schedule_name = #{scheduleName},
			</if>
			<if test="projectId != null and projectId != ''">
				project_id = #{projectId},
			</if>
			<if test="startTime != null ">
				start_time = #{startTime},
			</if>
			<if test="endTime != null ">
				end_time = #{endTime},
			</if>
			<if test="repeat != null and repeat != ''">
				`repeat` = #{repeat},
			</if>
			<if test="remind != null and remind != ''">
				remind = #{remind},
			</if>
			<if test="address != null and address != ''">
				address = #{address},
			</if>
			<if test="remarks != null and remarks != ''">
				remarks = #{remarks},
			</if>
			<if test="tagId != null and tagId != ''">
				tag_id = #{tagId},
			</if>
			<if test="createTime != null ">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null ">
				update_time = #{updateTime},
			</if>
			<if test="memberId != null ">
				member_id = #{memberId},
			</if>
			<if test="memberIds != null and memberIds != ''">
				member_ids = #{memberIds},
			</if>
			<if test="privacyPattern != null">
				privacy_pattern = #{privacyPattern},
			</if>
			<if test="scheduleCalendar != null">
				schedule_calendar = #{scheduleCalendar},
			</if>
			<if test="isDel != null">
				is_del = #{isDel},
			</if>
		</set>

		WHERE schedule_id = #{scheduleId}

	</update>

	<select id="findScheduleGroupByCreateTime" resultMap="resultMap">
		SELECT FROM_UNIXTIME(create_time / 1000,'%Y-%m') as date,project_id from prm_schedule
		<where>
			<if test="currTime != null and currTime != ''">
				and start_time > #{currTime}
			</if>
			<if test="projectId != null and projectId != ''">
				and project_id = #{projectId}
			</if>
		</where>
		GROUP BY FROM_UNIXTIME(create_time / 1000,'%Y-%m');
	</select>
	<select id="findScheduleList" resultMap="BaseResultMap" parameterType="java.util.Map">

		SELECT * from prm_schedule where FROM_UNIXTIME(create_time / 1000,'%Y-%m') = #{date} and is_del = 0 and project_id = #{projectId}

	</select>

	<select id="findScheduleListByDay" resultMap="BaseResultMap" parameterType="java.util.Map">
		SELECT * from prm_schedule where FROM_UNIXTIME(start_time / 1000,'%Y-%m-%d') = #{date} and member_id = #{userId}
	</select>

	<!-- 根据项目id 查询出该项目下的所有日程信息 -->
	<select id="findScheduleListByProjectId" resultType="java.lang.String" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/>
		from prm_schedule where project_id = #{projectId}
	</select>

	<!-- 查询出未来的日程 或者 过去的日程 -->
	<select id="findBeforeSchedule" resultMap="BaseResultMap" >
		select <include refid="Base_Column_List" />
		from prm_schedule where project_id = #{projectId}
		<if test="ident != null">
			<if test="ident == 0">
	  			and start_time <![CDATA[>]]> #{currTime}
			</if>
			<if test="ident == 1">
				and start_time <![CDATA[<]]> #{currTime}
			</if>
		</if>
	</select>

	<!-- 查询出未来的日程 (根据 日 存放) -->
	<select id="afterSchedule" resultMap="resultMap1">
		SELECT
			FROM_UNIXTIME(start_time / 1000, '%Y-%m-%d') AS date,member_id
		FROM
			prm_schedule
		WHERE
		(
			FROM_UNIXTIME(start_time / 1000, '%Y-%m-%d')
		)
		 <if test="lable == 1">
			 &gt;= (
				FROM_UNIXTIME(
			 #{currdate} / 1000,
					'%Y-%m-%d'
				)
			)
		 </if>
		<if test="lable == 0">
			&lt;(
			FROM_UNIXTIME(
			#{currdate} / 1000,
			'%Y-%m-%d'
			)
			)
		</if>
	and member_id = #{userId}
	GROUP BY
		FROM_UNIXTIME(start_time / 1000, '%Y-%m-%d');
	</select>

	<select id="findScheduleByUserIdAndByTreeDay" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		from prm_schedule where member_id = #{uId}
		AND (
		SELECT
		FROM_UNIXTIME(
		start_time / 1000,
		'%Y-%m-%d'
		)
		) &lt;= (
		SELECT
		adddate(curdate(), '+2 days')
		)
		AND (
		SELECT
		FROM_UNIXTIME(
		start_time / 1000,
		'%Y-%m-%d'
		)
		) &gt;= (SELECT curdate())
	</select>

	<!-- 查询该用户在日历上创建的所有日程 -->
	<select id="findCalendarSchedule" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/>
		from prm_schedule where schedule_calendar is not null  and member_id = #{uId}
	</select>

	<!-- 查询出在该项目回收站中的日程 -->
	<select id="findRecycleBin" resultMap="BaseResultMap2" parameterType="java.lang.String">
		select schedule_id,schedule_name,update_time
		from prm_schedule where is_del = 1 and project_id = #{projectId}
	</select>

	<!-- 查询日程的部分信息 (日程名称,开始时间,结束时间,项目名称) -->
    <select id="selectScheduleApiBean" resultMap="ScheduleApiBean">
		SELECT
			schedule_id,
			schedule_name,
			s.start_time,
			s.end_time,
			project_name
		FROM
		prm_schedule s
		LEFT JOIN prm_project p ON s.project_id = p.project_id WHERE schedule_id = #{id}
	</select>

</mapper>