<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.art1001.supply.mapper.file.FileMapper">
	
	<resultMap id="BaseResultMap" type="com.art1001.supply.entity.file.File">
		<id column="file_id" property="fileId"/>
		<result column="file_name" property="fileName" jdbcType="VARCHAR" />
		<result column="ext" property="ext" jdbcType="VARCHAR" />
		<result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
		<result column="project_id" property="projectId" jdbcType="VARCHAR" />
		<result column="member_id" property="memberId" jdbcType="VARCHAR" />
		<result column="catalog" property="catalog" jdbcType="INTEGER" />
		<result column="size" property="size" jdbcType="VARCHAR" />
		<result column="parent_id" property="parentId" jdbcType="VARCHAR" />
		<result column="file_del" property="fileDel" jdbcType="VARCHAR" />
		<result column="tag_id" property="tagId" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="BIGINT" />
		<result column="update_time" property="updateTime" jdbcType="BIGINT" />
		<result column="file_uids" property="fileUids" jdbcType="CLOB" />
		<result column="file_label" property="fileLabel" jdbcType="INTEGER" />
		<result column="file_thumbnail" property="fileThumbnail" jdbcType="INTEGER" />
		<result column="file_privacy" property="filePrivacy" jdbcType="INTEGER" />
		<result column="public_id" property="publicId" jdbcType="VARCHAR" />
		<result column="level" property="level" jdbcType="INTEGER"/>
		<association property="project" column="project_id" javaType="com.art1001.supply.entity.project.Project"
					 select="com.art1001.supply.mapper.project.ProjectMapper.findProjectByProjectId"/>
		<association property="userEntity" column="member_id" javaType="com.art1001.supply.entity.user.UserEntity"
					 select="com.art1001.supply.mapper.user.UserMapper.findUserInfoById"/>
		<collection property="joinInfo" javaType="java.util.ArrayList" column="{memberIds=file_uids}" select="com.art1001.supply.mapper.user.UserMapper.findManyUserById">
		</collection>
		<!--查询标签-->
		<collection property="tagList" column="file_id" ofType="com.art1001.supply.entity.tag.Tag">
			<id property="tagId" column="tag_id"/>
			<result property="tagName" column="tag_name"/>
			<result property="bgColor" column="bg_color"/>
		</collection>
	</resultMap>

	<!-- 映射回收站数据 -->
	<resultMap id="BaseResultMap2" type="com.art1001.supply.entity.base.RecycleBinVO">
		<id column="file_id" property="id"/>
		<result column="file_name" property="name" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="BIGINT" />
	</resultMap>

	<resultMap id="PublicMap" type="com.art1001.supply.entity.file.File">
		<id column="file_id" property="fileId"/>
		<result column="file_name" property="fileName" jdbcType="VARCHAR" />
		<result column="ext" property="ext" jdbcType="VARCHAR" />
		<result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
		<result column="project_id" property="projectId" jdbcType="VARCHAR" />
		<result column="catalog" property="catalog" jdbcType="INTEGER" />
		<result column="size" property="size" jdbcType="VARCHAR" />
		<result column="parent_id" property="parentId" jdbcType="VARCHAR" />
		<result column="file_del" property="fileDel" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="BIGINT" />
		<result column="update_time" property="updateTime" jdbcType="BIGINT" />
		<result column="file_thumbnail" property="fileThumbnail" jdbcType="INTEGER" />
	</resultMap>
    
	<sql id="Base_Column_List">
				file_id,
				file_name,
				ext,
				file_url,
				project_id,
				member_id,
			    `catalog`,
				`size`,
				parent_id,
				file_del,
				tag_id,
				create_time,
				update_time,
				file_uids,
				file_label,
				file_thumbnail,
				file_privacy,
				public_id,
				`level`
	</sql>
	<sql id="Base_Column_List2">
				f.file_id,
				f.file_name,
				f.ext,
				f.file_url,
				f.project_id,
				f.member_id,
			    f.`catalog`,
				f.`size`,
				f.parent_id,
				f.file_del,
				f.create_time,
				f.update_time,
				f.file_uids,
				f.file_label,
				f.file_thumbnail,
				f.file_privacy,
				f.public_id,
				f.level,
				tg.tag_id,
				tg.tag_name,
				tg.bg_color
	</sql>

	<sql id="whereStatement">
		<where>
			1 = 1
			<if test="condition !=null">
			</if>
		</where>
	</sql>
	
	<select id="findFilePagerList" resultMap="BaseResultMap"
		parameterType="com.art1001.supply.entity.base.Pager">
		
		select * from prm_file
		<include refid="whereStatement" />
		
		<if test="orderBy == 0">
			order by file_id desc
		</if>
		<if test="orderBy == 1">
			order by file_id asc
		</if>
		
	</select>
	
	<select id="findFileAllList" resultMap="BaseResultMap"
		parameterType="com.art1001.supply.entity.file.File">
		SELECT
		<include refid="Base_Column_List" />
		from prm_file
		<if test="orderBy == 0">
			order by file_id desc
		</if>
		<if test="orderBy == 1">
			order by file_id asc
		</if>
	</select>
	
	<select id="findFileById" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List2" />
		from prm_file f left join prm_tag_relation tr on f.file_id = tr.file_id left join prm_tag tg on tr.tag_id = tg.tag_id
		where
		f.file_id = #{fileId}
	</select>

	<select id="findByParentIdAndFileName" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(0) FROM prm_file WHERE parent_id = #{parentId} AND file_name = #{fileName}
	</select>

	<select id="findChildFile" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from prm_file
		where project_id = #{projectId} and parent_id = #{parentId}
	</select>

	<select id="findByProjectIdAndFileId" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT
			file_url
		FROM
			prm_file
		WHERE
			project_id = #{projectId}
		AND file_id = #{fileId}
	</select>

	<select id="findByProjectIdAndParentId" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
			prm_file
		WHERE
			project_id = #{projectId}
		AND parent_id = #{parentId}
	</select>

	<select id="findTopLevel" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT
			file_url
		FROM
			prm_file
		WHERE
			file_label = 0
		and	project_id = #{projectId}
		and parent_id = '0'
		LIMIT 0, 1
	</select>

	<select id="findFileList" parameterType="com.art1001.supply.entity.file.File" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		prm_file
            where file_label = 0
			<if test="fileId != null and fileId != ''">
				and file_id = #{fileId}
			</if>
			<if test="fileName != null and fileName != ''">
				and file_name = #{fileName}
			</if>
			<if test="ext != null and ext != ''">
				and ext = #{ext}
			</if>
			<if test="fileUrl != null and fileUrl != ''">
				and file_url = #{fileUrl}
			</if>
			<if test="projectId != null and projectId != ''">
				and project_id = #{projectId}
			</if>
			<if test="memberId != null and memberId != ''">
				and member_id = #{memberId}
			</if>
			<if test="catalog != null ">
				and catalog = #{catalog}
			</if>
			<if test="parentId != null and parentId != ''">
				and parent_id = #{parentId}
			</if>
			<if test="fileDel != null">
				and file_del = #{fileDel}
			</if>
			<if test="fileUids != null">
				and file_uids = #{fileUids}
			</if>
	</select>

	<select id="findByIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from prm_file
		where file_id in
		<foreach collection="array" open="(" separator="," close=")" item="id">
			#{id}
		</foreach>
	</select>


	<select id="findProjectUrl" parameterType="java.lang.String" resultType="java.lang.String">
		select file_url from prm_file where parent_id = '1' and file_label=0 and project_id = #{projectId}
	</select>

	<select id="findChildFolder" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		prm_file
		where catalog = 1 and  parent_id = #{fileId}
	</select>

	<update id="moveFile" parameterType="java.util.Map">
		update prm_file set parent_id = #{folderId}
		where file_id in
		<foreach collection="fileIds" open="(" separator="," close=")" item="fileId">
			#{fileId}
		</foreach>
	</update>

	<update id="moveToRecycleBin" parameterType="java.lang.String">
		update prm_file set file_del = 1
		where file_id in
		<foreach collection="array" open="(" separator="," close=")" item="id">
			#{id}
		</foreach>
	</update>
	
	<delete id="deleteFileById" parameterType="java.lang.String">
		delete from
		prm_file where file_id = #{fileId}
	</delete>
	
	<insert id="saveFile" parameterType="com.art1001.supply.entity.file.File">

		insert into prm_file
		<trim prefix="(" suffix=")" suffixOverrides=",">

			<if test="fileId != null and fileId != ''">
			file_id,
			</if>
			<if test="fileName != null and fileName != ''">
			file_name,
			</if>
			<if test="ext != null and ext != ''">
				ext,
			</if>
			<if test="fileUrl != null and fileUrl != ''">
			file_url,
			</if>
			<if test="projectId != null and projectId != ''">
			project_id,
			</if>
			<if test="memberId != null and memberId != ''">
			member_id,
			</if>
			<if test="catalog != null ">
			catalog,
			</if>
			<if test="size != null and size != ''">
			size,
			</if>
			<if test="parentId != null and parentId != ''">
			parent_id,
			</if>
			<if test="fileDel != null and fileDel != ''">
			file_del,
			</if>
			<if test="tagId != null and tagId != ''">
			tag_id,
			</if>
			<if test="createTime != null ">
			create_time,
			</if>
			<if test="updateTime != null ">
			update_time,
			</if>
			<if test="fileUids != null ">
				file_uids,
			</if>
			<if test="fileLabel != null ">
				file_label,
			</if>
			<if test="fileThumbnail != null ">
				file_thumbnail,
			</if>
			<if test="filePrivacy != null ">
				file_privacy,
			</if>
			<if test="level != null ">
				`level`,
			</if>
		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides=",">

			<if test="fileId != null and fileId != ''">
				#{fileId},
			</if>
			<if test="fileName != null and fileName != ''">
				#{fileName},
			</if>
			<if test="ext != null and ext != ''">
				#{ext},
			</if>
			<if test="fileUrl != null and fileUrl != ''">
				#{fileUrl},
			</if>
			<if test="projectId != null and projectId != ''">
				#{projectId},
			</if>
			<if test="memberId != null and memberId != ''">
				#{memberId},
			</if>
			<if test="catalog != null ">
				#{catalog},
			</if>
			<if test="size != null and size != ''">
				#{size},
			</if>
			<if test="parentId != null and parentId != ''">
				#{parentId},
			</if>
			<if test="fileDel != null and fileDel != ''">
				#{fileDel},
			</if>
			<if test="tagId != null and tagId != ''">
				#{tagId},
			</if>
			<if test="createTime != null ">
				#{createTime},
			</if>
			<if test="updateTime != null ">
				#{updateTime},
			</if>
			<if test="fileUids != null ">
				#{fileUids},
			</if>
			<if test="fileLabel != null ">
				#{fileLabel},
			</if>
			<if test="fileThumbnail != null ">
				#{fileThumbnail},
			</if>
			<if test="filePrivacy != null ">
				#{filePrivacy},
			</if>
			<if test="level != null ">
				#{level},
			</if>
		</trim>

	</insert>
	
	<update id="updateFile" parameterType="com.art1001.supply.entity.file.File">

		update prm_file
		<set>
			<if test="fileName != null and fileName != ''">
				file_name = #{fileName},
			</if>
			<if test="ext != null and ext != ''">
				ext = #{ext},
			</if>
			<if test="fileUrl != null and fileUrl != ''">
				file_url = #{fileUrl},
			</if>
			<if test="projectId != null and projectId != ''">
				project_id = #{projectId},
			</if>
			<if test="memberId != null and memberId != ''">
				member_id = #{memberId},
			</if>
			<if test="catalog != null ">
				catalog = #{catalog},
			</if>
			<if test="size != null and size != ''">
				size = #{size},
			</if>
			<if test="parentId != null and parentId != ''">
				parent_id = #{parentId},
			</if>
			<if test="fileDel != null">
				file_del = #{fileDel},
			</if>
			<if test="tagId != null and tagId != ''">
				tag_id = #{tagId},
			</if>
			<if test="createTime != null ">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null ">
				update_time = #{updateTime},
			</if>
			<if test="fileUids != null ">
				file_uids = #{fileUids},
			</if>
			<if test="fileThumbnail != null ">
				file_thumbnail = #{fileThumbnail},
			</if>
			<if test="filePrivacy != null ">
				file_privacy = #{filePrivacy},
			</if>
			<if test="level != null ">
				`level` = #{level},
			</if>
		</set>

		WHERE file_id = #{fileId}

	</update>

	<update id="updateTagId" parameterType="java.lang.String">
		update prm_file set tag_id = #{tagIds} where file_id = #{fileId}
	</update>

	<!-- 根据项目id 查询文件信息 -->
	<select id="findFileByProjectId" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/>
		from prm_file where project_id = #{projectId}
	</select>

    <!-- 查询我参与的所有文件 -->
	<select id="findJoinFile" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/>
		from prm_file where find_in_set(#{uId}, file_uIds);
	</select>

	<!-- 查询出在该项目回收站中的文件 -->
	<select id="findRecycleBin" parameterType="java.lang.String" resultMap="BaseResultMap2">
		select file_name,file_id,update_time
		from prm_file where file_del = 1 and project_id = #{projectId}
		<if test="type == '文件'">
			and catalog = 0
		</if>
		<if test="type == '文件夹'">
			and catalog = 1
		</if>
	</select>

	<!-- 查询某个文件夹下的公开文件 -->
	<select id="findPublicFile" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/> from prm_file where parent_id = #{parentId}
	</select>

	<insert id="savePublicFile">
		insert into prm_public_file
		<trim prefix="(" suffix=")" suffixOverrides=",">

			<if test="fileId != null and fileId != ''">
				file_id,
			</if>
			<if test="fileName != null and fileName != ''">
				file_name,
			</if>
			<if test="ext != null and ext != ''">
				ext,
			</if>
			<if test="fileUrl != null and fileUrl != ''">
				file_url,
			</if>
			<if test="projectId != null and projectId != ''">
				project_id,
			</if>
			<if test="catalog != null ">
				catalog,
			</if>
			<if test="size != null and size != ''">
				size,
			</if>
			<if test="parentId != null and parentId != ''">
				parent_id,
			</if>
			<if test="fileDel != null and fileDel != ''">
				file_del,
			</if>
			<if test="createTime != null ">
				create_time,
			</if>
			<if test="updateTime != null ">
				update_time,
			</if>
			<if test="fileThumbnail != null ">
				file_thumbnail,
			</if>
			<if test="level != null ">
				`level`,
			</if>
		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides=",">

			<if test="fileId != null and fileId != ''">
				#{fileId},
			</if>
			<if test="fileName != null and fileName != ''">
				#{fileName},
			</if>
			<if test="ext != null and ext != ''">
				#{ext},
			</if>
			<if test="fileUrl != null and fileUrl != ''">
				#{fileUrl},
			</if>
			<if test="projectId != null and projectId != ''">
				#{projectId},
			</if>
			<if test="catalog != null ">
				#{catalog},
			</if>
			<if test="size != null and size != ''">
				#{size},
			</if>
			<if test="parentId != null and parentId != ''">
				#{parentId},
			</if>
			<if test="fileDel != null and fileDel != ''">
				#{fileDel},
			</if>
			<if test="createTime != null ">
				#{createTime},
			</if>
			<if test="updateTime != null ">
				#{updateTime},
			</if>
			<if test="fileThumbnail != null ">
				#{fileThumbnail},
			</if>
			<if test="level != null ">
				#{level},
			</if>
		</trim>
	</insert>

	<!-- 插入多条文件信息 -->
	<insert id="saveFileBatch">
		insert into prm_file
		<trim prefix="(" suffix=")" suffixOverrides=",">
				file_id,
				file_name,
				ext,
				file_url,
				project_id,
				`catalog`,
				`size`,
				parent_id,
				member_id,
				file_uids,
				`level`,
				create_time
		</trim>
		VALUES
		<foreach collection="list" separator="," item="file" >
			(
				<if test="file.fileId != null and file.fileId != ''">
					#{file.fileId},
				</if>
				<if test="file.fileName != null and file.fileName != ''">
					#{file.fileName},
				</if>
				<if test="file.ext != null and file.ext != ''">
					#{file.ext},
				</if>
				<if test="file.fileUrl != null and file.fileUrl != ''">
					#{file.fileUrl},
				</if>
				<if test="file.projectId != null and file.projectId != ''">
					#{file.projectId},
				</if>
				<if test="file.catalog != null ">
					#{file.catalog},
				</if>
				<if test="file.size != null and file.size != ''">
					#{file.size},
				</if>
				<if test="file.parentId != null and file.parentId != ''">
					#{file.parentId},
				</if>
				<if test="file.memberId != null ">
					#{file.memberId},
				</if>
				<if test="file.fileUids != null ">
					#{file.fileUids},
				</if>
				<if test="file.createTime != null ">
					#{file.createTime}
				</if>
				<if test="file.level != null ">
					#{file.level}
				</if>
			)
		</foreach>
	</insert>
</mapper>