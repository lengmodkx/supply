<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.art1001.supply.mapper.task.TaskMapper">
	
	<resultMap id="BaseResultMap" type="com.art1001.supply.entity.task.Task">
		<result column="task_id" property="taskId" jdbcType="VARCHAR" />
		<result column="project_id" property="projectId" jdbcType="VARCHAR" />
		<result column="task_name" property="taskName" jdbcType="VARCHAR" />
		<result column="start_time" property="startTime" jdbcType="BIGINT" />
		<result column="end_time" property="endTime" jdbcType="BIGINT" />
		<result column="repeat" property="repeat" jdbcType="VARCHAR" />
		<result column="remind" property="remind" jdbcType="VARCHAR" />
		<result column="remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="priority" property="priority" jdbcType="VARCHAR" />
		<result column="tag_id" property="tagId" jdbcType="VARCHAR" />
		<result column="level" property="level" jdbcType="INTEGER" />
		<result column="parent_id" property="parentId" jdbcType="VARCHAR" />
		<result column="member_id" property="memberId" jdbcType="VARCHAR" />
		<result column="executor" property="executor" jdbcType="VARCHAR" />
		<result column="task_type" property="taskType" jdbcType="VARCHAR" />
		<result column="task_menu_id" property="taskMenuId" jdbcType="VARCHAR" />
		<result column="task_status" property="taskStatus" jdbcType="VARCHAR" />
		<result column="task_code" property="taskCode" jdbcType="VARCHAR" />
		<result column="task_del" property="taskDel" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="BIGINT" />
		<result column="update_time" property="updateTime" jdbcType="BIGINT" />
		<result column="remind_time" property="remindTime" jdbcType="BIGINT"/>
		<result column="repetition_time" property="repetitionTime" jdbcType="BIGINT"/>
		<result column="fabulous_count" property="fabulousCount" jdbcType="INTEGER"/>
		<result column="privacy_pattern" property="privacyPattern" jdbcType="INTEGER"/>
		<result column="other" property="other" jdbcType="VARCHAR"/>
		<result column="order" property="order" jdbcType="INTEGER"/>
		<result column="task_calendar" property="taskCalendar" jdbcType="BIGINT"/>
		<result column="task_uids" property="taskUIds" jdbcType="CLOB" />
		<!--查询创建者-->
		<association property="creatorInfo" column="member_id" javaType="com.art1001.supply.entity.user.UserEntity"
			select="com.art1001.supply.mapper.user.UserMapper.findById"/>
		<!--查询执行者-->
		<association property="executorInfo" column="executor" javaType="com.art1001.supply.entity.user.UserEntity"
					 select="com.art1001.supply.mapper.user.UserMapper.findById"/>
		<!--查询项目-->
		<association property="project" column="project_id" javaType="com.art1001.supply.entity.project.Project"
					 select="com.art1001.supply.mapper.project.ProjectMapper.findProjectByProjectId"/>
		<!--查询参与者-->
		<collection property="joinInfo" column="{memberIds=task_uids}" javaType="java.util.ArrayList"
					select="com.art1001.supply.mapper.user.UserMapper.findManyUserById"/>
		<!--查询子任务-->
		<collection property="taskList" column="task_id" javaType="java.util.ArrayList"
					select="com.art1001.supply.mapper.task.TaskMapper.findSubLevelTask"/>
		<!--查询标签-->
		<collection property="tagList" column="tag_id" javaType="java.util.ArrayList"
					select="com.art1001.supply.mapper.tag.TagMapper.findTagByTagIds"/>
	</resultMap>

	<resultMap id="findMenuTaskMemberInfo" type="com.art1001.supply.entity.task.Task">
		<!--查询执行者-->
		<result column="task_id" property="taskId" jdbcType="VARCHAR" />
		<result column="project_id" property="projectId" jdbcType="VARCHAR" />
		<result column="task_name" property="taskName" jdbcType="VARCHAR" />
		<result column="start_time" property="startTime" jdbcType="BIGINT" />
		<result column="end_time" property="endTime" jdbcType="BIGINT" />
		<result column="repeat" property="repeat" jdbcType="VARCHAR" />
		<result column="remind" property="remind" jdbcType="VARCHAR" />
		<result column="remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="priority" property="priority" jdbcType="VARCHAR" />
		<result column="tag_id" property="tagId" jdbcType="VARCHAR" />
		<result column="level" property="level" jdbcType="INTEGER" />
		<result column="parent_id" property="parentId" jdbcType="VARCHAR" />
		<result column="member_id" property="memberId" jdbcType="VARCHAR" />
		<result column="executor" property="executor" jdbcType="VARCHAR" />
		<result column="task_type" property="taskType" jdbcType="VARCHAR" />
		<result column="task_menu_id" property="taskMenuId" jdbcType="VARCHAR" />
		<result column="task_status" property="taskStatus" jdbcType="VARCHAR" />
		<result column="task_code" property="taskCode" jdbcType="VARCHAR" />
		<result column="task_del" property="taskDel" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="BIGINT" />
		<result column="update_time" property="updateTime" jdbcType="BIGINT" />
		<result column="remind_time" property="remindTime" jdbcType="BIGINT"/>
		<result column="repetition_time" property="repetitionTime" jdbcType="BIGINT"/>
		<result column="fabulous_count" property="fabulousCount" jdbcType="INTEGER"/>
		<result column="privacy_pattern" property="privacyPattern" jdbcType="INTEGER"/>
		<result column="other" property="other" jdbcType="VARCHAR"/>
		<result column="order" property="order" jdbcType="INTEGER"/>
		<result column="task_calendar" property="taskCalendar" jdbcType="BIGINT"/>
		<result column="task_uids" property="memberId" jdbcType="CLOB" />
		<association property="executorInfo" column="executor" javaType="com.art1001.supply.entity.user.UserEntity"
					 select="com.art1001.supply.mapper.user.UserMapper.findById"/>
	</resultMap>

	<sql id="Base_Column_List">
						task_id,
				prm_task.project_id,
				task_name,
				prm_task.start_time,
				prm_task.end_time,
				prm_task.`repeat`,
				prm_task.remind,
				prm_task.remarks,
				prm_task.priority,
				prm_task.tag_id,
				prm_task.`level`,
				prm_task.parent_id,
				prm_task.member_id,
				prm_task.executor,
				prm_task.task_type,
				prm_task.task_menu_id,
				prm_task.task_status,
				prm_task.task_code,
				prm_task.task_del,
				prm_task.create_time,
				prm_task.update_time,
				prm_task.remind_time,
				prm_task.repetition_time,
				prm_task.fabulous_count,
				prm_task.privacy_pattern,
				prm_task.other,
				prm_task.order,
				prm_task.task_calendar,
				prm_task.task_uids
	</sql>
	<sql id="Base_Column_List2">
						task_id,
				prm_task.project_id,
				task_name,
				prm_task.start_time,
				prm_task.end_time,
				`repeat`,
				remind,
				remarks,
				priority,
				tag_id,
				`level`,
				parent_id,
				prm_task.member_id,
				executor,
				task_type,
				task_menu_id,
				task_status,
				task_code,
				task_del,
				prm_task.create_time,
				prm_task.update_time,
				remind_time,
				repetition_time,
				fabulous_count,
				privacy_pattern,
				other,
				`order`,
				task_calendar
	</sql>

	<sql id="whereStatement">
		<where>
			1 = 1
			<if test="condition !=null">
			</if>
		</where>
	</sql>
	
	<select id="findTaskPagerList" resultMap="BaseResultMap"
		parameterType="com.art1001.supply.entity.base.Pager">
		
		select * from prm_task
		<include refid="whereStatement" />
		
		<if test="orderBy == 0">
			order by task_id desc
		</if>
		<if test="orderBy == 1">
			order by task_id asc
		</if>
		
	</select>
	
	<select id="findTaskAllList" resultMap="BaseResultMap"
		parameterType="com.art1001.supply.entity.task.Task">
		SELECT
		<include refid="Base_Column_List" />
		from prm_task
		<if test="orderBy == 0">
			order by task_id desc
		</if>
		<if test="orderBy == 1">
			order by task_id asc
		</if>
	</select>

	<!-- 根据任务id 查询任务的信息 和执行者的信息 -->
	<select id="findTaskByTaskId" resultMap="BaseResultMap" parameterType="java.lang.String">
	SELECT
	<include refid="Base_Column_List"/>
	from prm_task where prm_task.task_id = #{taskId}
	</select>
	
	<delete id="deleteTaskByTaskId" parameterType="java.lang.String">
		delete from
		prm_task where task_id = #{taskId}
	</delete>
	
	<insert id="saveTask" parameterType="com.art1001.supply.entity.task.Task">

		insert into prm_task
		<trim prefix="(" suffix=")" suffixOverrides=",">

			<if test="taskId != null and taskId != ''">
			task_id,
			</if>
			<if test="projectId != null and projectId != ''">
			project_id,
			</if>
			<if test="taskName != null and taskName != ''">
			task_name,
			</if>
			<if test="startTime != null ">
			start_time,
			</if>
			<if test="endTime != null ">
			end_time,
			</if>
			<if test="repeat != null and repeat != ''">
			`repeat`,
			</if>
			<if test="remind != null and remind != ''">
			remind,
			</if>
			<if test="remarks != null and remarks != ''">
			remarks,
			</if>
			<if test="priority != null and priority != ''">
			priority,
			</if>
			<if test="tagId != null and tagId != ''">
			tag_id,
			</if>
			<if test="level != null ">
			`level`,
			</if>
			<if test="parentId != null and parentId != ''">
			parent_id,
			</if>
			<if test="memberId != null and memberId != ''">
			member_id,
			</if>
			<if test="executor != null and executor != ''">
			executor,
			</if>
			<if test="taskType != null and taskType != ''">
			task_type,
			</if>
			<if test="taskMenuId != null and taskMenuId != ''">
			task_menu_id,
			</if>
			<if test="taskStatus != null and taskStatus != ''">
			task_status,
			</if>
			<if test="taskCode != null and taskCode != ''">
			task_code,
			</if>
			<if test="taskDel != null ">
			task_del,
			</if>
			<if test="createTime != null ">
			create_time,
			</if>
			<if test="updateTime != null ">
			update_time,
			</if>
			<if test="remindTime != null">
			remind_time,
			</if>
			<if test="repetitionTime != null">
			repetition_Time,
			</if>
			<if test="fabulousCount != null">
				fabulous_count,
			</if>
			<if test="privacyPattern != null">
				privacy_pattern,
			</if>
			<if test="other != null">
				other,
			</if>
			<if test="order != null">
				`order`,
			</if>
			<if test="taskCalendar != null">
				`task_calendar`,
			</if>

		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides=",">

			<if test="taskId != null and taskId != ''">
				#{taskId},
			</if>
			<if test="projectId != null and projectId != ''">
				#{projectId},
			</if>
			<if test="taskName != null and taskName != ''">
				#{taskName},
			</if>
			<if test="startTime != null ">
				#{startTime},
			</if>
			<if test="endTime != null ">
				#{endTime},
			</if>
			<if test="repeat != null and repeat != ''">
				#{repeat},
			</if>
			<if test="remind != null and remind != ''">
				#{remind},
			</if>
			<if test="remarks != null and remarks != ''">
				#{remarks},
			</if>
			<if test="priority != null and priority != ''">
				#{priority},
			</if>
			<if test="tagId != null and tagId != ''">
				#{tagId},
			</if>
			<if test="level != null ">
				#{level},
			</if>
			<if test="parentId != null and parentId != ''">
				#{parentId},
			</if>
			<if test="memberId != null and memberId != ''">
				#{memberId},
			</if>
			<if test="executor != null and executor != ''">
				#{executor},
			</if>
			<if test="taskType != null and taskType != ''">
				#{taskType},
			</if>
			<if test="taskMenuId != null and taskMenuId != ''">
				#{taskMenuId},
			</if>
			<if test="taskStatus != null and taskStatus != ''">
				#{taskStatus},
			</if>
			<if test="taskCode != null and taskCode != ''">
				#{taskCode},
			</if>
			<if test="taskDel != null ">
				#{taskDel},
			</if>
			<if test="createTime != null ">
				#{createTime},
			</if>
			<if test="updateTime != null ">
				#{updateTime},
			</if>
			<if test="remindTime != null">
				#{remindTime},
			</if>
			<if test="repetitionTime != null">
				#{repetitionTime},
			</if>
			<if test="fabulousCount != null">
				#{fabulousCount},
			</if>
			<if test="privacyPattern != null">
				#{privacyPattern},
			</if>
			<if test="other != null">
				#{other},
			</if>
			<if test="order != null">
				#{order},
			</if>
			<if test="taskCalendar != null">
				#{taskCalendar},
			</if>
		</trim>

	</insert>
	
	<update id="updateTask" parameterType="com.art1001.supply.entity.task.Task">

		update prm_task
		<set>
			<if test="projectId != null and projectId != ''">
				project_id = #{projectId},
			</if>
			<if test="taskName != null and taskName != ''">
				task_name = #{taskName},
			</if>
			<if test="startTime != null ">
				start_time = #{startTime},
			</if>
			<if test="endTime != null ">
				end_time = #{endTime},
			</if>
			<if test="repeat != null and repeat != ''">
				`repeat` = #{repeat},
			</if>
			<if test="remind != null and remind != ''">
				`remind` = #{remind},
			</if>
			<if test="remarks != null and remarks != ''">
				`remarks` = #{remarks},
			</if>
			<if test="priority != null and priority != ''">
				`priority` = #{priority},
			</if>
			<if test="tagId != null and tagId != ''">
				tag_id = #{tagId},
			</if>
			<if test="level != null ">
				`level` = #{level},
			</if>
			<if test="parentId != null and parentId != ''">
				parent_id = #{parentId},
			</if>
			<if test="memberId != null and memberId != ''">
				member_id = #{memberId},
			</if>
			<if test="executor != null and executor != ''">
				executor = #{executor},
			</if>
			<if test="taskType != null and taskType != ''">
				task_type = #{taskType},
			</if>
			<if test="taskMenuId != null and taskMenuId != ''">
				task_menu_id = #{taskMenuId},
			</if>
			<if test="taskStatus != null and taskStatus != ''">
				task_status = #{taskStatus},
			</if>
			<if test="taskCode != null and taskCode != ''">
				task_code = #{taskCode},
			</if>
			<if test="taskDel != null ">
				task_del = #{taskDel},
			</if>
			<if test="createTime != null ">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null ">
				update_time = #{updateTime},
			</if>
			<if test="remindTime != null">
				remind_time = #{remindTime},
			</if>
			<if test="repetitionTime != null">
				repetition_Time = #{repetitionTime},
			</if>
			<if test="fabulousCount != null">
				fabulous_count = #{fabulousCount},
			</if>
			<if test="privacyPattern != null">
				privacy_pattern = #{privacyPattern},
			</if>
			<if test="other != null">
				other = #{other},
			</if>
			<if test="order != null">
				`order` = #{order},
			</if>
			<if test="taskCalendar != null">
				task_calendar = #{taskCalendar},
			</if>
		</set>
		WHERE task_id = #{taskId}
	</update>

	<!-- 此条sql 用来处理任务 移入回收站的功能 -->
	<update id="moveToRecycleBin">
		update prm_task
		<set>
			task_del = 1,
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
		</set>
		<where>
			task_id = #{taskId}
		</where>
	</update>

	<!-- 此条sql 用来处理任务恢复的功能 -->
	<update id="recoverTask">
		update prm_task
		<set>
			task_del = 0,
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
			project_id = #{projectId}
			task_menu_id = #{menuId},
		</set>
		<where>
			task_id = #{taskId}
		</where>
	</update>

	<!-- 用于处理任务分组 移入\恢复  的sql -->
	<update id="groupTaskmoveToRecycleBin">
		update prm_task
		<set>
			<if test="taskDel != null and taskDel != ''">
				<if test="taskDel == 1">
					task_del = 0,
				</if>
				<if test="taskDel == 0">
					task_del = 1,
				</if>
			</if>
		</set>
		where task_id = #{taskId}
	</update>

	<!-- 修改某个任务的状态 -->
	<update id="changeTaskStatus">
		update prm_task
		<set>
			<if test="taskStatus != '' and taskStatus != null">
				task_status = #{taskStatus},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
		</set>
		<where>
			task_id = #{taskId}
		</where>
	</update>

	<!-- 判断当前菜单有没有任务 -->
	<select id="findTaskByMenuId" resultType="java.lang.Integer" parameterType="java.lang.String">
		select count(task_id) from prm_task where task_menu_id = #{taskMenuId}
	</select>

	<!-- 根据任务id数组查找出任务 -->
	<select id="findManyTask" resultMap="BaseResultMap">
		select
	  	<include refid="Base_Column_List"/>
		from prm_task where task_id in
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</select>

	<!-- 查询某个任务的标签id -->
	<select id="findTaskTagByTaskId" resultType="java.lang.String">
		select tag_id from prm_task where task_id = #{taskId}
	</select>

	<!-- 查询某个任务的全部子任务信息 -->
	<select id="findSubLevelTask" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List"/>
		from prm_task where parent_id = #{taskId}
	</select>

	<select id="findSubTaskCount" resultType="java.lang.Integer" >
		select count(0) from prm_task where parent_id = #{taskId}
		<if test="taskStatus != '' and taskStatus != null">
			and task_status = #{taskStatus}
		</if>
	</select>
	<!-- 更改当前任务的隐私模式 -->
	<update id="SettingUpPrivacyPatterns">
		update prm_task
		<set>
			<if test="privacyPattern == 0">
				privacy_pattern = 1
			</if>
			<if test="privacyPattern == 1">
				privacy_pattern = 0
			</if>
		</set>
		<where>
			task_id = #{taskId}
		</where>
	</update>

	<!-- 根据任务状态查询多个任务信息 -->
	<select id="findTaskByStatus" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from prm_task where task_status = #{status} and project_id = #{projectId}
	</select>

	<!-- 查询今天的任务 -->
	<select id="findTaskByToday" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from prm_task where (SELECT FROM_UNIXTIME(prm_task.create_time/1000, '%Y-%m-%d')) = ( select CURDATE())
		and project_id = #{projectId}
	</select>

	<!-- 查询当前菜单下的全部任务信息 -->
	<select id="taskMenu" resultMap="findMenuTaskMemberInfo">
		select
		<include refid="Base_Column_List"/>
		from prm_task
		where prm_task.task_menu_id = #{menuId} order by prm_task.order asc
	</select>

	<!-- 查询某个执行者的所有任务 -->
	<select id="findTaskByExecutor" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List2"/>
		,prm_project.project_name
		from prm_task left join prm_project on prm_task.project_id = prm_project.project_id where executor = #{uId} and task_status = '未完成'
		<if test="orderType != null and orderType != ''">
			<if test="orderType == '2'.toString()">
				order by end_time asc
			</if>
			<if test="orderType == '3'.toString()">
				order by prm_project.create_time desc
			</if>
		</if>
	</select>

	<!-- 查询项目下所有待认领的任务 -->
	<select id="waitClaimTask" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from prm_task where project_id = #{projectId} and executor = ''
	</select>

	<!-- 将任务的执行者设置为空字符串 -->
	<delete id="removeExecutor">
		delete from prm_task_member
		<where>
			public_id = #{taskId} and type = '执行者'
		</where>
	</delete>

	<!-- 清空该任务的所有参与者 -->
	<delete id="clearTaskMember">
		delete from prm_task_member where task_id = #{taskId}
	</delete>

	<!-- 查询当前子任务的父级任务的项目id -->
	<select id="findFatherLevelProjectId" resultType="com.art1001.supply.entity.task.Task">
		select
	  	prm_task.project_id projectId
		from prm_task where task_id = #{taskId}
	</select>

	<!-- 查询出项目下的所有任务 -->
	<select id="findTaskByProject" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from prm_task where task_del = 0 and parent_id = 0 and project_id = #{projectId}
	</select>

	<!-- 查询出项目下的指定执行者 并且是未完成的任务 -->
	<select id="findTaskByProjectAndStatusAndExecutor" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from prm_task where task_del = 0 and parent_id = 0 and project_id = #{projectId} and executor = #{memberId} and task_status = '未完成'
	</select>

	<!-- 查询出项目下的指定参与者 并且是未完成的任务 -->
	<select id="findTaskByProjectAndStatusAndUser" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from prm_task where task_del = 0 and parent_id = 0 and project_id = #{projectId} and task_id in(select public_id from prm_task_member where member_id = #{memberId} and `type` = '参与者' and public_type = '任务')  and task_status = '未完成'
	</select>

	<!-- 查询出项目下的指定创建者 并且是未完成的任务 -->
	<select id="findTaskByProjectAndStatusAndCreateMember" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from prm_task where task_del = 0 and parent_id = 0 and project_id = #{projectId} and  member_id = #{memberId} and task_status = '未完成'
	</select>

	<!-- 按照优先级查询任务 -->
	<select id="findTaskByPriority" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from prm_task where project_id = #{projectId} and priority = #{priority}
	</select>

	<!-- 查询任务下的所有子任务 -->
	<select id="findTaskByFatherTask" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from prm_task where task_del = 0 and parent_id = #{taskId}
	</select>

	<!-- 查询菜单下的所有任务信息 不包括 执行者信息 -->
	<select id="simpleTaskMenu" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from prm_task where task_menu_id = #{menuId}
	</select>

	<!-- 根据子任务id 查询出父任务信息 -->
	<select id="findTaskBySubTaskId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from prm_task where task_id = (
			select parent_id from prm_task where task_id = #{taskId}
		)
	</select>

	<!-- 查询出当前用户参与的近三天的任务 -->
	<select id="findTaskByUserIdAndByTreeDay" resultMap="BaseResultMap"
			parameterType="java.lang.String">
		SELECT
		<include refid="Base_Column_List" />
		from prm_task where task_id in (select public_id from prm_task_member where prm_task_member.member_id = #{userId} and public_type='任务' and type='参与者')
		AND (
		SELECT
		FROM_UNIXTIME(
		prm_task.start_time / 1000,
		'%Y-%m-%d'
		)
		) &lt;= (
		SELECT
		adddate(curdate(), '+2 days')
		)
		AND (
		SELECT
		FROM_UNIXTIME(
		prm_task.start_time / 1000,
		'%Y-%m-%d'
		)
		) &gt;= (SELECT curdate())
	</select>

	<!-- 查询出我参与的所有任务 -->
	<select id="findTaskByUserId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List2"/>
		,prm_project.project_name
		from prm_task left join prm_project on prm_task.project_id = prm_project.project_id where task_id in (select public_id from prm_task_member where public_type = '任务' and `type` = '参与者' and member_id = #{id}) and task_status = '未完成'
		<if test="orderType != null and orderType != ''">
			<if test="orderType == '2'.toString()">
				order by end_time
			</if>
			<if test="orderType == '3'.toString()">
				order by prm_task.create_time desc
			</if>
		</if>
	</select>


	<!-- 查询某个用户创建的所有任务 当前项目下 -->
	<select id="findTaskByMemberId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from prm_task where member_id = #{memberId}
	</select>

	<!-- 查询某个用户的执行的所有任务 并且排序 -->
	<select id="findTaskByExecutorIdAndTime" resultMap="BaseResultMap">
		select <include refid="Base_Column_List2"/>,
		,prm_project.project_name
		from prm_task inner join prm_project on prm_task.project_id = prm_project.project_id where prm_task.executor = #{uId}
		<if test="orderType == 2">
			order by end_time
		</if>
		<if test="and orderType == 3">
			order by create_time desc
		</if>
	</select>

	<!-- 查询出某个用户执行的所有完成的任务 -->
	<select id="findTaskByExecutorAndStatus" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List2"/>
		,prm_project.project_name
		from prm_task left join prm_project on prm_task.project_id = prm_project.project_id where executor = #{id} and task_status = '完成'
	</select>

	<!-- 查询出某个用户参与的所有任务  (根据任务状态查询) -->
	<select id="findTaskByUserIdByStatus" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List2"/>
		,prm_project.project_name
		from prm_task left join prm_project on prm_task.project_id = prm_project.project_id where task_id in (select public_id from prm_task_member where public_type = '任务' and `type` = '参与者' and prm_task.member_id = #{uId})
		<if test="status != null and status != ''">
			and task_status = #{status}
		</if>
	</select>

	<!-- 查询某个用户的参与的所有任务 并且排序 -->
	<select id="findTaskByUserAndTime">
		select <include refid="Base_Column_List"/>
		from prm_task where task_id in (
		select task_id from prm_task_member where member_id = #{id}
		)
		<if test="orderType != null and orderType != '' and orderType == '2'.toString()">
			order by end_time
		</if>
		<if test="orderType != null and orderType != '' and orderType == '3'.toString()">
			order by create_time desc
		</if>
	</select>

	<!-- 查询出该用户创建的任务 (根据任务状态查询) -->
	<select id="findTaskByCreateMemberByStatus" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List2"/>
		,prm_project.project_name
		from prm_task left join prm_project on prm_task.project_id = prm_project.project_id where prm_task.member_id = #{uId}
		<if test="status != null and status != ''">
			and task_status = #{status}
		</if>
	</select>

	<!-- 查询出某个用户创建的所有任务 (只要未完成的) -->
	<select id="findTaskByCreateMember" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List2"/>
		,prm_project.project_name
		from prm_task left join prm_project on prm_task.project_id = prm_project.project_id where prm_task.member_id = #{id} and task_status = '未完成'
		<if test="orderType == '2'.toString()">
			order by end_time
		</if>
		<if test="orderType == '3'.toString()">
			order by prm_task.create_time desc
		</if>
	</select>

	<!-- 查询某个用户的创建的所有任务 并且排序 -->
	<select id="findTaskByCreateMemberAndTime" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/>
		from prm_task where member_id = #{uId}
		<if test="orderType != null and orderType != '' and orderType == '2'.toString()">
			order by end_time
		</if>
		<if test="orderType != null and orderType != '' and orderType == '3'.toString()">
			order by create_time
		</if>
	</select>

	<!-- 清空该任务的标签 -->
	<update id="clearTaskTag">
		update prm_task
		<set>
			tag_id = ''
		</set>
		where task_id = #{taskId}
	</update>

	<!-- 根据用户查询出该用户执行的和创建的所有任务 -->
	<select id="findTaskByCalendar" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/>
		from prm_task where executor = #{uId} or member_id = #{uId}
	</select>


</mapper>