<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.art1001.supply.mapper.role.RoleMapper">
	<!--mybatis ehcache缓存配置,以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 -->
	<!--<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/> -->
	<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->

	<sql id="roleAttributes">
		r_id,
		r_name,
		r_key,
		r_status,
		r_description,
		r_create_time,
		r_update_time
	</sql>

	<resultMap id="roleMap" type="com.art1001.supply.entity.role.RoleEntity">
		<id property="id" column="r_id"/>
		<result property="name" column="r_name"/>
		<result property="key" column="r_key"/>
		<result property="status" column="r_status"/>
		<result property="description" column="r_description"/>
		<result property="createTime" column="r_create_time"/>
		<result property="updateTime" column="r_update_time"/>
	</resultMap>
	
	<select id="queryListByPage" parameterType="map" resultMap="roleMap" flushCache="true" useCache="true">
		SELECT 
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.r_create_time,
		r.r_update_time,
		r.organization_id
		FROM tb_role r
		<where>
			<if test="name != null and name != ''">
				r.r_name=#{name}
			</if>
		</where>
		order by r_id DESC
	</select>
	
	<select id="findByName" parameterType="String" resultMap="roleMap" flushCache="true" useCache="true">
		SELECT 
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.r_create_time,
		r.r_update_time
		FROM tb_role r
		where r.r_name = #{name}
	</select>
	
	<insert id="insert" parameterType="com.art1001.supply.entity.role.RoleEntity" useGeneratedKeys="true" keyProperty="id">
		insert ignore into tb_role (
			r_name,
			r_key,
			r_status,
			r_description,
			r_create_time
			)   
		values (
			#{name},
			#{key},
			#{status},
			#{description},
			now()
			)  
	</insert>
	
	
	<select id="findById" parameterType="long" resultMap="roleMap" flushCache="true" useCache="true">
		SELECT 
		r.r_id,
		r.r_name,
		r.r_key,
		r.r_status,
		r.r_description,
		r.r_create_time,
		r.r_update_time
		FROM tb_role r
		where r.r_id = #{id}
	</select>
	
	<update id="update" parameterType="com.art1001.supply.entity.role.RoleEntity" flushCache="true">
		update tb_role
		<set>
			<if test="name != null and name != ''">
				r_name = #{name},
			</if>
			<if test="key != null and key != ''">
				r_key = #{key},
			</if>
			<if test="status != null and status != ''">
				r_status = #{status},
			</if>
			<if test="description != null and description != ''">
				r_description = #{description}
			</if>
		</set>
		where r_id = ${id}
	</update>
	
	<delete id="deleteBatchById" parameterType="list">
       delete from tb_role where r_id in  
	    <foreach collection="list" item = "id" open="(" separator="," close=")">
	    #{id}  
	    </foreach>  
	</delete>
	
	<delete id="deleteById" parameterType="int">
       delete from tb_role where r_id = ${id}
	</delete>
	
	<delete id="deleteRoleResource" parameterType="int">
       delete from tb_resources_role where r_id = ${roleId}   
	</delete>
	
	<select id="findRoleUserById" parameterType="int" resultType="int" flushCache="true" useCache="true">
		SELECT count(id)
		FROM tb_role_user
		where r_id = ${roleId}
	</select>
	
	<select id="findRoleResourceById" parameterType="int" resultType="int" flushCache="true" useCache="true">
		SELECT count(id)
		FROM tb_resources_role
		where r_id = ${roleId}
	</select>
	
	<insert id="addRoleResourceBatch" parameterType="map">
		insert ignore into tb_resources_role (
			s_id,
			r_id,
			t_create_time
		)   
		values 
		<foreach collection="resourceIds" item ="id" separator=",">
			(
				#{id},
				#{roleId},
				now()
			)
		</foreach>
	</insert>
	
	<insert id="addRoleResource" parameterType="map">
		insert ignore into tb_resources_role (
			s_id,
			r_id,
			t_create_time
		)   
		values 
			(
				#{resourceId},
				#{roleId},
				now()
			)
	</insert>
	
	<select id="findUserIdByRoleId" parameterType="int" resultType="long" flushCache="true" useCache="true">
		SELECT DISTINCT u_id FROM tb_role_user where r_id = ${roleId}
	</select>
	
</mapper>