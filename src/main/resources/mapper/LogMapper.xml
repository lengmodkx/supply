<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.art1001.supply.mapper.log.LogMapper">
	
	<resultMap id="BaseResultMap" type="com.art1001.supply.entity.log.Log">
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="public_id" property="publicId" jdbcType="VARCHAR" />
		<result column="project_id" property="projectId" jdbcType="VARCHAR" />
		<result column="member_id" property="memberId" jdbcType="VARCHAR" />
		<result column="member_name" property="memberName" jdbcType="VARCHAR" />
		<result column="member_img" property="memberImg" jdbcType="VARCHAR" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="log_type" property="logType" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="BIGINT" />
		<result column="log_flag" property="logFlag" jdbcType="INTEGER" />
		<result column="log_is_withdraw" property="logIsWithdraw" jdbcType="INTEGER" />
		<result column="file_ids" property="fileIds" jdbcType="CLOB" />

		<!--<collection property="fileList" javaType="java.util.ArrayList" column="{fileIds=file_ids}" select="com.art1001.supply.mapper.file.FileMapper.findByFileIds"/>-->
	</resultMap>
    
	<sql id="Base_Column_List">
						id,
				public_id,
				project_id,
				member_id,
				content,
				log_type,
				create_time,
				log_flag,
				file_ids,
				log_is_withdraw
	</sql>

	<sql id="whereStatement">
		<where>
			1 = 1
			<if test="condition !=null">
			</if>
		</where>
	</sql>
	
	<select id="findLogPagerList" resultMap="BaseResultMap"
		parameterType="com.art1001.supply.entity.base.Pager">
		
		select * from prm_log
		<include refid="whereStatement" />
		
		<if test="orderBy == 0">
			order by id desc
		</if>
		<if test="orderBy == 1">
			order by id asc
		</if>
		
	</select>
	
	<select id="findLogAllList" resultMap="BaseResultMap"
		parameterType="com.art1001.supply.entity.log.Log">
		SELECT
		<include refid="Base_Column_List" />
		from prm_log where 1=1
		<if test="projectId != null and projectId!=''">
			and project_id = #{projectId}
		</if>
		<if test="logFlag != null ">
			and log_flag = #{logFlag}
		</if>
		<if test="logType != null ">
			and log_type = #{logType}
		</if>
	</select>
	
	<select id="findLogById" resultMap="BaseResultMap" parameterType="java.lang.String">

		select
		<include refid="Base_Column_List" />
		from prm_log where id = #{id}

	</select>
	
	<delete id="deleteLogById" parameterType="java.lang.String">
		delete from
		prm_log where id = #{id}
	</delete>
	
	<insert id="saveLog" parameterType="com.art1001.supply.entity.log.Log">

		insert into prm_log
		<trim prefix="(" suffix=")" suffixOverrides=",">

			<if test="id != null and id != ''">
			id,
			</if>
			<if test="publicId != null and publicId != ''">
			public_id,
			</if>
			<if test="projectId != null and projectId != ''">
				project_id,
			</if>
			<if test="memberId != null and memberId != ''">
			member_id,
			</if>
			<if test="content != null">
			content,
			</if>
			<if test="logType != null ">
			log_type,
			</if>
			<if test="createTime != null ">
			create_time,
			</if>
			<if test="logFlag != null ">
			log_flag,
			</if>
			<if test="fileIds != null and fileIds != ''">
				file_ids,
			</if>
			<if test="logIsWithdraw != null">
				log_is_withdraw,
			</if>
		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides=",">

			<if test="id != null and id != ''">
				#{id},
			</if>
			<if test="publicId != null and publicId != ''">
				#{publicId},
			</if>
			<if test="projectId != null and projectId != ''">
				#{projectId},
			</if>
			<if test="memberId != null and memberId != ''">
				#{memberId},
			</if>
			<if test="content != null">
				#{content},
			</if>
			<if test="logType != null ">
				#{logType},
			</if>
			<if test="createTime != null ">
				#{createTime},
			</if>
			<if test="logFlag != null ">
				#{logFlag},
			</if>
			<if test="fileIds != null and fileIds != ''">
				#{fileIds},
			</if>
			<if test="logIsWithdraw != null">
				#{logIsWithdraw},
			</if>
		</trim>

	</insert>
	
	<update id="updateLog" parameterType="com.art1001.supply.entity.log.Log">

		update prm_log
		<set>
			<if test="publicId != null and publicId != ''">
				public_id = #{publicId},
			</if>
			<if test="projectId != null and projectId != ''">
				project_id = #{projectId},
			</if>
			<if test="memberId != null and memberId != ''">
				member_id = #{memberId},
			</if>
			<if test="content != null and content != ''">
				content = #{content},
			</if>
			<if test="logType != null ">
				log_type = #{logType},
			</if>
			<if test="createTime != null ">
				create_time = #{createTime},
			</if>
			<if test="logFlag != null ">
				log_flag = #{logFlag},
			</if>
			<if test="fileIds != null and fileIds != ''">
				file_ids = #{fileIds},
			</if>
			<if test="logIsWithdraw != null and logIsWithdraw != ''">
				log_is_withdraw = #{logIsWithdraw},
			</if>
		</set>

		WHERE id = #{id}

	</update>

	<!-- 查询出最近的五条日志记录 -->
	<select id="initLog" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
			l.id,
			l.public_id,
			l.project_id,
			l.member_id,
			u.user_name as member_name,
			u.image as member_img,
			l.content,
			l.log_type,
			l.create_time,
			l.log_flag,
			l.file_ids,
			l.log_is_withdraw
		from prm_log l
		left join tb_user u on l.member_id = u.user_id
		where public_id = #{publicId} order by create_time desc limit 0,5
	</select>

	<select id="findLogByProjectId" resultMap="BaseResultMap" parameterType="java.lang.String">

		select
		<include refid="Base_Column_List" />
		from prm_log where project_id = #{projectId} and log_type = 0

	</select>

	<!-- 初始一个信息下的所有 日志信息 和聊天信息 -->
	<select id="initAllLog" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/>
		from prm_log where public_id = #{publicId} and log_type = 1 order by create_time
	</select>

	<!-- 删除多个任务的日志信息 -->
	<delete id="deleteManyByPublicId">
		delete from prm_log where public_id in
		(
			<foreach collection="list" item="publicId" separator=",">
				#{publicId}
			</foreach>
		)
	</delete>
</mapper>